# NOTE: must set PYTHONPATH variable for pytest to recognize local modules# export PYTHONPATH=/my/path/to/modules# OR# export PYTHONPATH=$(pwd)import numpy as npimport os.path# sehrd modulesfrom corgan import corganclass TestCorgan:        def test_train(self):                path_checkpoint='test_ckpts'        prefix_checkpoint='test'        n_epochs=10        cor = corgan()                # dummy dataset        n = 1000        m = 7        x = np.random.randint(low=0, high=2, size=(n,m))                model = cor.train(x=x,                              n_epochs_pretrain=10,                             n_epochs=10,                             n_cpu=1,                              batch_size=512,                             path_checkpoint='test_ckpts',                              prefix_checkpoint='test',                             debug=False)                file_ckpt=os.path.join(path_checkpoint, prefix_checkpoint + ".model_epoch_%d.pth" % n_epochs)        assert os.path.isfile(file_ckpt)        def test_generate(self):                cor = corgan()                # dummy dataset        n_gen = 500        n = 1000        m = 7        x = np.random.randint(low=0, high=2, size=(n,m))                model = cor.train(x=x,                              n_epochs_pretrain=10,                             n_epochs=10,                             n_cpu=1,                             debug=False)                x_synth = cor.generate(model = model, n_gen=n_gen)                assert len(x_synth) == n_gen            def test_save_and_load(self):                cor = corgan()                # dummy dataset        n_gen = 500        n = 1000        m = 7        x = np.random.randint(low=0, high=2, size=(n,m))                model_saved = cor.train(x=x,                              n_epochs_pretrain=10,                             n_epochs=10,                             n_cpu=1,                             debug=False)                file = 'test.pkl'        cor.save_obj(obj=model_saved, file_name=file)        model_loaded = cor.load_obj(file)                x_synth = cor.generate(model = model_loaded, n_gen=n_gen)                assert len(x_synth) == n_gen